{"ast":null,"code":"var _jsxFileName = \"/Users/jaqueduarte/Documents/GeorgeBrown/Fifth seme/Full Stack Development/labTest2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SearchBar from './searchBar';\nimport WeatherDisplay from './weatherDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleSearch = searchCity => {\n    setIsLoading(true);\n    setError(null);\n    // Use HTTPS for API requests\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=Toronto&appid=890217156a7e13ed492ba979545975cb`).then(response => {\n      if (!response.ok) {\n        throw new Error('Weather data not found for this city');\n      }\n      return response.json();\n    }).then(data => {\n      setWeatherData(data);\n      setCity(searchCity);\n      setIsLoading(false);\n    }).catch(error => {\n      console.error('Error fetching weather data:', error);\n      setError(error.message);\n      setIsLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(WeatherDisplay, {\n      data: weatherData,\n      city: city\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EYWQTffIca57g4G1DkCPsyWlOK4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SearchBar","WeatherDisplay","jsxDEV","_jsxDEV","App","_s","weatherData","setWeatherData","city","setCity","isLoading","setIsLoading","error","setError","handleSearch","searchCity","fetch","then","response","ok","Error","json","data","catch","console","message","className","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jaqueduarte/Documents/GeorgeBrown/Fifth seme/Full Stack Development/labTest2/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport SearchBar from './searchBar';\nimport WeatherDisplay from './weatherDisplay';\n\nfunction App() {\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleSearch = (searchCity) => {\n    setIsLoading(true);\n    setError(null);\n    // Use HTTPS for API requests\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=Toronto&appid=890217156a7e13ed492ba979545975cb`)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Weather data not found for this city');\n        }\n        return response.json();\n      })\n      .then(data => {\n        setWeatherData(data);\n        setCity(searchCity);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        console.error('Error fetching weather data:', error);\n        setError(error.message);\n        setIsLoading(false);\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <SearchBar onSearch={handleSearch} />\n      {isLoading && <div>Loading...</div>}\n      {error && <div>Error: {error}</div>}\n      {weatherData && <WeatherDisplay data={weatherData} city={city} />}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMe,YAAY,GAAIC,UAAU,IAAK;IACnCJ,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd;IACAG,KAAK,CAAE,kGAAiG,CAAC,CACtGC,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,sCAAsC,CAAC;MACzD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACZf,cAAc,CAACe,IAAI,CAAC;MACpBb,OAAO,CAACM,UAAU,CAAC;MACnBJ,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,CACDY,KAAK,CAACX,KAAK,IAAI;MACdY,OAAO,CAACZ,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDC,QAAQ,CAACD,KAAK,CAACa,OAAO,CAAC;MACvBd,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACN,CAAC;EAED,oBACER,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBxB,OAAA,CAACH,SAAS;MAAC4B,QAAQ,EAAEd;IAAa;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACpCtB,SAAS,iBAAIP,OAAA;MAAAwB,QAAA,EAAK;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAClCpB,KAAK,iBAAIT,OAAA;MAAAwB,QAAA,GAAK,SAAO,EAACf,KAAK;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAClC1B,WAAW,iBAAIH,OAAA,CAACF,cAAc;MAACqB,IAAI,EAAEhB,WAAY;MAACE,IAAI,EAAEA;IAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEV;AAAC3B,EAAA,CArCQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAuCZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}