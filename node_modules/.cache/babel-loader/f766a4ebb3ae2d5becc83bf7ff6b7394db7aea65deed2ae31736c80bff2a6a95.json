{"ast":null,"code":"var _jsxFileName = \"/Users/jaqueduarte/Documents/GeorgeBrown/Fifth seme/Full Stack Development/labTest2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SearchBar from './SearchBar';\nimport WeatherDisplay from './weatherDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState('');\n  const handleSearch = searchCity => {\n    // Replace 'YourAPIKey' with your actual API key and 'searchCity' with the city name\n    fetch(`http://api.weatherapi.com/v1/current.json?key=890217156a7e13ed492ba979545975cb\n    &q=${searchCity}`).then(response => response.json()).then(data => {\n      setWeatherData(data);\n      setCity(searchCity);\n    }).catch(error => {\n      console.error('Error fetching weather data:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(WeatherDisplay, {\n      data: weatherData,\n      city: city\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/goIKPOObmQkJXAWw6ioLFnqsAE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SearchBar","WeatherDisplay","jsxDEV","_jsxDEV","App","_s","weatherData","setWeatherData","city","setCity","handleSearch","searchCity","fetch","then","response","json","data","catch","error","console","className","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jaqueduarte/Documents/GeorgeBrown/Fifth seme/Full Stack Development/labTest2/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport SearchBar from './SearchBar';\nimport WeatherDisplay from './weatherDisplay';\n\nfunction App() {\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState('');\n\n  const handleSearch = (searchCity) => {\n    // Replace 'YourAPIKey' with your actual API key and 'searchCity' with the city name\n    fetch(`http://api.weatherapi.com/v1/current.json?key=890217156a7e13ed492ba979545975cb\n    &q=${searchCity}`)\n      .then(response => response.json())\n      .then(data => {\n        setWeatherData(data);\n        setCity(searchCity);\n      })\n      .catch(error => {\n        console.error('Error fetching weather data:', error);\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <SearchBar onSearch={handleSearch} />\n      {weatherData && <WeatherDisplay data={weatherData} city={city} />}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMW,YAAY,GAAIC,UAAU,IAAK;IACnC;IACAC,KAAK,CAAE;AACX,SAASD,UAAW,EAAC,CAAC,CACfE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZT,cAAc,CAACS,IAAI,CAAC;MACpBP,OAAO,CAACE,UAAU,CAAC;IACrB,CAAC,CAAC,CACDM,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,CAAC;EACN,CAAC;EAED,oBACEf,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBlB,OAAA,CAACH,SAAS;MAACsB,QAAQ,EAAEZ;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACpCpB,WAAW,iBAAIH,OAAA,CAACF,cAAc;MAACe,IAAI,EAAEV,WAAY;MAACE,IAAI,EAAEA;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEV;AAACrB,EAAA,CAxBQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA0BZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}