{"ast":null,"code":"var _jsxFileName = \"/Users/jaqueduarte/Documents/GeorgeBrown/Fifth seme/Full Stack Development/labTest2/src/weatherDisplay.js\";\nimport React from 'react';\nimport './weatherDisplay.css'; // Ensure you have this CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WeatherDisplay({\n  data,\n  city\n}) {\n  // Check if data and data.current are defined before trying to access data.current.temp_c\n  if (!data || !data.current) {\n    // You can return a loading spinner here or null to render nothing\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this); // Or your loading component\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-display\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Weather in \", city]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", data.current.temp_c, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Condition: \", data.current.condition.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = WeatherDisplay;\nexport default WeatherDisplay;\nvar _c;\n$RefreshReg$(_c, \"WeatherDisplay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","WeatherDisplay","data","city","current","children","fileName","_jsxFileName","lineNumber","columnNumber","className","temp_c","condition","text","_c","$RefreshReg$"],"sources":["/Users/jaqueduarte/Documents/GeorgeBrown/Fifth seme/Full Stack Development/labTest2/src/weatherDisplay.js"],"sourcesContent":["import React from 'react';\nimport './weatherDisplay.css'; // Ensure you have this CSS file for styling\n\nfunction WeatherDisplay({ data, city }) {\n  // Check if data and data.current are defined before trying to access data.current.temp_c\n  if (!data || !data.current) {\n    // You can return a loading spinner here or null to render nothing\n    return <div>Loading...</div>; // Or your loading component\n  }\n\n  return (\n    <div className=\"weather-display\">\n      <h2>Weather in {city}</h2>\n      <div className=\"current-weather\">\n        <p>Temperature: {data.current.temp_c}Â°C</p>\n        <p>Condition: {data.current.condition.text}</p>\n        {/* Add more weather details as needed */}\n      </div>\n    </div>\n  );\n}\n\nexport default WeatherDisplay;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,sBAAsB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,cAAcA,CAAC;EAAEC,IAAI;EAAEC;AAAK,CAAC,EAAE;EACtC;EACA,IAAI,CAACD,IAAI,IAAI,CAACA,IAAI,CAACE,OAAO,EAAE;IAC1B;IACA,oBAAOJ,OAAA;MAAAK,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAChC;;EAEA,oBACET,OAAA;IAAKU,SAAS,EAAC,iBAAiB;IAAAL,QAAA,gBAC9BL,OAAA;MAAAK,QAAA,GAAI,aAAW,EAACF,IAAI;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1BT,OAAA;MAAKU,SAAS,EAAC,iBAAiB;MAAAL,QAAA,gBAC9BL,OAAA;QAAAK,QAAA,GAAG,eAAa,EAACH,IAAI,CAACE,OAAO,CAACO,MAAM,EAAC,OAAE;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC3CT,OAAA;QAAAK,QAAA,GAAG,aAAW,EAACH,IAAI,CAACE,OAAO,CAACQ,SAAS,CAACC,IAAI;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACK,EAAA,GAjBQb,cAAc;AAmBvB,eAAeA,cAAc;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}